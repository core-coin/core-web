$n: 7;
$s: 5rem;

.animate-cubeframe-cubes {
  transform: rotateX(55deg) rotateZ(-45deg);
  position: absolute;
  width: $s;
  height: $s;
  transform-style: preserve-3d;
  display: flex;
  justify-content: center;
  align-items: center;
}

.animate-cubeframe-cube {
  position: absolute;
  width: $s;
  height: $s;
  transform-style: preserve-3d;
  display: flex;
  justify-content: center;
  align-items: center;
}

.animate-cubeframe-x,
.animate-cubeframe-y,
.animate-cubeframe-z {
  position: absolute;
  width: $s;
  height: $s;
  transform-style: preserve-3d;
  display: flex;
  justify-content: center;
  align-items: center;

  &:before,
  &:after {
    content: '';
    position: absolute;
    width: $s;
    height: $s;
    border: 1px solid white;
    box-shadow: inset 0 0 3px 0 white;
    background-color: #272727;
  }
}

.animate-cubeframe-x {
  transform: rotateX(90deg);
  &:before { transform: translateZ($s / 2); }
  &:after { transform: translateZ(-$s / 2); }
}

.animate-cubeframe-y {
  transform: rotateY(90deg);
  &:before { transform: translateZ($s / 2); }
  &:after { transform: translateZ(-$s / 2); }
}

.animate-cubeframe-z {
  transform: rotateZ(90deg);
  &:before { transform: translateZ($s / 2); }
  &:after { transform: translateZ(-$s / 2); }
}

@for $i from 0 through $n - 1 {
  .animate-cubeframe-cube:nth-child(#{$i + 1}) {
    --animate-cubeframe-delay: #{$i * 0.15}s;
    animation: animate-cubeframe-spin 3s var(--animate-cubeframe-delay) cubic-bezier(1, -0.50, 0.50, 1.25) infinite;

    .animate-cubeframe-x,
    .animate-cubeframe-y,
    .animate-cubeframe-z {
      &:before {
        transform: translateZ((($s / 3) * $i) + ($s / 2));
      }
      
      &:after {
        transform: translateZ(((-$s / 3) * $i) - ($s / 2));
      }
    }
  }
}

@keyframes animate-cubeframe-spin {
  50%, 100% {
    transform: rotateZ(-90deg);
  }
} 
