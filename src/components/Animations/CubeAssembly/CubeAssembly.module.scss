$palette: #1c6c3e #dd7ca9; // Using our theme colors
$n-items: 6;
$edge-length: 3.125em;
$inradius: .5 * $edge-length;
$s: .2; // minimum scale factor
$t: .6s; // animation duration
$p: 7%; // difference between face shades

@mixin c($c, $p: $p) {
  color: lighten(saturate($c, $p), $p);
}

.wrapper {
  width: 100%;
  height: 100%;
  position: relative;
}

.assembly {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  transform: rotateX(-35deg) rotateY(-45deg) translateZ($inradius);
}

.item {
  position: absolute;
  margin: -$inradius;
  width: $edge-length;
  height: $edge-length;
  transform-style: preserve-3d;
  transform-origin: 50% 50% (-1 * $inradius);
  animation: s $t cubic-bezier(.45, .03, .51, .95) infinite alternate;
  
  // Front face
  background: currentColor;
  box-shadow: 0 0 .125em currentColor;
  transform-style: preserve-3d;
  
  // Top face
  &:before {
    position: absolute;
    content: '';
    width: 100%;
    height: $edge-length;
    background: currentColor;
    transform: rotateX(90deg) translateY(-100%);
    transform-origin: top;
    box-shadow: inherit;
  }
  
  // Left side face
  &:after {
    position: absolute;
    content: '';
    width: $edge-length;
    height: 100%;
    background: currentColor;
    transform: rotateY(-90deg) translateX(-100%);
    transform-origin: left;
    box-shadow: inherit;
  }

  // Right side face
  div {
    position: absolute;
    width: $edge-length;
    height: 100%;
    background: currentColor;
    transform: rotateY(90deg) translateX(100%);
    transform-origin: right;
    box-shadow: inherit;
  }
  
  @for $i from 0 through ($n-items - 1) {
    $n: $n-items - 1;
    $c: mix(nth($palette, 1), nth($palette, 2), $i/$n * 100%);
    
    &:nth-child(#{$i + 1}) {
      margin-top: (.5 * $n - $i - .5) * $edge-length;
      color: $c;
      animation-delay: ($i/$n-items - 1) * 2 * $t;
      
      &:before {
        @include c($c, 2 * $p);
      }
      &:after {
        @include c($c);
        filter: brightness(0.85);
      }
      div {
        @include c($c);
        filter: brightness(0.7);
      }
    }
  }
}

@keyframes s {
  to { transform: scale3d($s, $s, $s); }
} 
